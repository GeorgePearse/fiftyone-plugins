"""
Script that prepares examples for publishing by
-   Adding links to the header of the example notebooks
-   Regenerating the table of contents in ``README.md``

| Copyright 2017-2022, Voxel51, Inc.
| `voxel51.com <https://voxel51.com/>`_
|
"""
import argparse
import fiftyone as fo
import fiftyone.plugins as fop
import fiftyone.operators as foo
from fiftyone.operators.registry import OperatorRegistry
from fiftyone.plugins.definitions import PluginDefinition
import os

from jinja2 import Environment, BaseLoader
import yaml

import eta.core.utils as etau


ROOT_DIR = "/".join(os.path.realpath(__file__).split("/")[:-2])
README_PATH = os.path.join(ROOT_DIR, "README.md")

fo.app_config.plugins_dir = ROOT_DIR

# The images for the templates below are located at
# https://github.com/voxel51/fiftyone-examples/issues/11

TOC_TEMPLATE = """
<!-- Autogenerated by `scripts/make_examples.py` -->
<table>
    <tr>
        <th colspan="6">
            FiftyOne Plugins
        </th>
    </tr>
{% for plugin in plugin_list %}
    <tr>
        <td><code>{{plugin.version}}</code></td>
        <td><b><a href="{{ plugin.href }}">{{ plugin.name }}</a></b></td>
        <td>{{ plugin.desc }}</td>
        <td><a href="{{ plugin.about_href }}">About</a></td>
        <td><a href="{{ plugin.install_href }}">Install</a></td>
        <td>
        {% if plugin.has_operators %}
            <a href="{{ plugin.operators_href }}">Operators</a>
        {% endif %}
        </td>
    </tr>
{% endfor %}
</table>
"""

def _make_examples_table():
    operator_reg = OperatorRegistry()
    plugins = fop.list_plugins()
    plugin_idx = {p.name: {"plugin": p, "operators": []} for p in plugins}
    operators = operator_reg.list_operators()
    for operator in operators:
        idx = plugin_idx.get(operator.plugin_name, None)
        if idx is None:
            continue
        idx["operators"].append(operator)
        print(operator.config.label)

    plugin_list = []

    plugin_list.append({
        "name": "@voxel51/fiftyone-gpt",
        "desc": "Wish you could search your images or videos without writing a line of code? Now you can!",
        "href": "https://github.com/voxel51/fiftyone-gpt",
        "about_href": "https://github.com/voxel51/fiftyone-gpt",
        "install_href": "https://github.com/voxel51/fiftyone-gpt#installation",
        "types": "Python and JS",
        "has_operators": False,
        "version": "1.0.0",
        "license": "Apache 2.0",
    })
    plugin_list.append({
        "name": "@voxel51/fiftyone-docs-search",
        "href": "https://github.com/voxel51/fiftyone-docs-search",
        "desc": "Enable semantic search on the Voxel51 documentation from the FiftyOne app",
        "about_href": "https://github.com/voxel51/fiftyone-docs-search",
        "install_href": "https://github.com/voxel51/fiftyone-docs-search#installation",
        "types": "Python",
        "has_operators": False,
        "version": "1.0.0",
        "license": "Apache 2.0",
    })

    for idx in plugin_idx.keys():
        pidx = plugin_idx[idx]
        plugin = pidx["plugin"]
        has_js = plugin.has_js
        has_py = plugin.has_py or plugin.name == "@voxel51/operators"
        if has_js and has_py:
            types = "Python and JS"
        elif has_js:
            types = "JS"
        elif has_py:
            types = "Python"
        if plugin.name == "my-importer":
            continue

        ops = plugin_idx[idx]["operators"]
        operators_list = []

        plugin_dirname = plugin.directory.split("/")[-1]

        for op in ops:
            operators_list.append({
                "name": op.name,
                "label": op.config.label,
                "description": op.config.description
            })
        href = f"blob/main/packages/{plugin_dirname}/README.md"
        plugin_list.append({
            "name": idx,
            "desc": plugin.description,
            "href": href,
            "about_href": f"{href}#about",
            "install_href": f"{href}#installation",
            "operators_href": f"{href}#operators",
            "types": types,
            "has_operators": len(operators_list) > 0,
            "version": plugin.version,
            "license": plugin.license,
            "operators": operators_list,
        })



    environment = Environment(
        loader=BaseLoader, trim_blocks=True, lstrip_blocks=True,
    )

    template = environment.from_string(TOC_TEMPLATE)

    return template.render(plugin_list=plugin_list)


def _update_readme():
    toc_header = "## Table of contents"
    table = _make_examples_table()

    print(table)

def main(skip_readme):
    _update_readme()


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Prepares FiftyOne examples for official release."
    )
    parser.add_argument(
        "-s",
        "--skip-readme",
        action="store_true",
        help="don't update the table of contents section in the README",
    )
    args = parser.parse_args()

    main(args.skip_readme)